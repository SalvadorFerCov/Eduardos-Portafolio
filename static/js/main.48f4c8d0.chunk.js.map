{"version":3,"sources":["components/PicText/PicText.module.css","components/App/App.module.css","components/JForce/JForce.module.css","components/NinjaUp/NinjaUp.module.css","components/Home/Home.js","components/PicText/PicText.js","components/JForce/JForce.js","components/NinjaUp/NinjaUp.js","components/App/App.js","reportWebVitals.js","index.js","components/Home/Home.module.css"],"names":["module","exports","cx","classNames","bind","styles","projects","name","backgroundUrl","Home","history","useHistory","className","content","proyectImages","map","card","onClick","push","style","backgroundImage","process","width","height","background","PicText","children","picFirst","imgFileName","defaultProps","JForce","NinjaUp","App","basename","wrapper","navBar","data","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48f4c8d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PicText\":\"PicText_PicText__1dBdY\",\"picFirst\":\"PicText_picFirst__AHgZ3\",\"background\":\"PicText_background__2Ke1Y\",\"content\":\"PicText_content__2aw30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__SbxVM\",\"content\":\"App_content__1DClC\",\"navBar\":\"App_navBar__3o75N\",\"data\":\"App_data__2ZwS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"JForce_content__1nAw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"NinjaUp_content__OScqY\"};","import React from \"react\";\r\nimport classNames from \"classnames/bind\";\r\nimport styles from \"./Home.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst cx = classNames.bind(styles);\r\n\r\nconst projects = [\r\n  { name: \"Ninja Up!\", backgroundUrl: \"/ninja1.png\" },\r\n  { name: \"J Force\", backgroundUrl: \"/jforce2.png\" },\r\n  { name: \"Project: Demo RPG\", backgroundUrl: \"/chrono_trigger.jpg\" },\r\n  {\r\n    name: \"Project: Minigame Battle Royale\",\r\n    backgroundUrl: \"/minigame2.png\",\r\n  },\r\n  {\r\n    name: \"Project: Pokémon MMO\",\r\n    backgroundUrl: \"/pokemon1.png\",\r\n  },\r\n];\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className={styles.Home}>\r\n      <div className={styles.content}>\r\n        <h1> Eduardo Peña Junco</h1>\r\n        <p>\r\n          Hola! My name is Eduardo Peña and I'm an Industrial Engineer by career\r\n          but a Gamer by heart. I've worked as a Producer in a videogame studio\r\n          and as a Project Manager/Product Engineer in the software industry.\r\n          What is it that I like about videogames that I would want to dedicate\r\n          my life to them? That is a good question and if I had to answer it, I\r\n          would say the emotions videogames can make you, the player, feel. As a\r\n          Game Designer, I want to create experiences that can make a player\r\n          feel something.\r\n        </p>\r\n      </div>\r\n      <div className={styles.proyectImages}>\r\n        {projects.map(({ name, backgroundUrl }) => (\r\n          <div key={name} className={cx(styles.card)}>\r\n            <div\r\n              onClick={() => {\r\n                history.push(`/${name}`);\r\n              }}\r\n              style={{\r\n                backgroundImage: `url(${process.env.PUBLIC_URL}${backgroundUrl})`,\r\n                width: 400,\r\n                height: 400,\r\n              }}\r\n              className={styles.background}\r\n            ></div>\r\n            <span>{name}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./PicText.module.css\";\nimport classNames from \"classnames/bind\";\n\nconst cx = classNames.bind(styles);\n\nconst PicText = ({ children, picFirst, imgFileName }) => (\n  <div className={cx(styles.PicText, { picFirst })}>\n    <div\n      style={{\n        backgroundImage: `url(${process.env.PUBLIC_URL}/${imgFileName}`,\n        width: 400,\n        height: 400,\n      }}\n      className={styles.background}\n    />\n    <div className={styles.content}>{children}</div>\n  </div>\n);\n\nPicText.propTypes = {\n  children: PropTypes.node.isRequired,\n  picFirst: PropTypes.bool,\n  imgFileName: PropTypes.string,\n};\n\nPicText.defaultProps = {\n  picFirst: false,\n  imgFileName: \"melee.jpg\",\n};\n\nexport default PicText;\n","import React from \"react\";\nimport styles from \"./JForce.module.css\";\nimport PicText from \"../PicText/PicText\";\n\nconst renderJForceGamePlay = () => (\n  <>\n    <h2>Gameplay</h2>\n    <ul>\n      <li>\n        Machines are the main gameplay loop. They crash using a system we\n        nicknamed the “Chaos Manager”. This pulls a random number and depending\n        on the probability of each machine, they may or may not break down.\n      </li>\n      <li>\n        If a machine is broken down, get ready to enter a minigame to fix it.\n        From pressing the A button repeatedly to hitting it a single time for a\n        precise action, each machine is different.\n      </li>\n      <li>\n        If a machine continues to be broken down, it will drain the HP of the\n        team and if the HP reaches 0, is Game Over. Survive for 5 minutes to\n        win!\n      </li>\n    </ul>\n  </>\n);\n\nconst renderJForceGameDesign = () => (\n  <>\n    <h2>Game Design thought process and notes</h2>\n    <p>\n      This project was developed at the Global Game Jam 2020, where I\n      participated as a Game Designer and Producer. The theme was \"Fix\".\n    </p>\n    <ul>\n      <li>\n        From the first time I thought of the game, I always thought of it as a\n        multiplayer experience. Thanks to the amazing work of our Lead Eng, we\n        were able to implement a 4 player co-op experience.\n      </li>\n      <li>\n        Creating a fun cooperative experience demanded skills of the player but\n        I added a certain randomness to it so no game was the same. In order to\n        have this, I designed various simple minigames that started easy but\n        could become increasingly harder.\n      </li>\n      <li>\n        The machines can break down all at the same time so constant\n        communication is key, which makes for a fun couple of sessions. Hiding\n        the HP bar sets the tension right from the start and adds to the frantic\n        communication.\n      </li>\n    </ul>\n  </>\n);\n\nconst JForce = () => (\n  <div>\n    <div className={styles.content}>\n      <h1> J Force</h1>\n      <p>\n        Co-operative multiplayer where you have to fix/repair the different\n        machines in order to survive. Coordination and communication is\n        everything!\n      </p>\n      <PicText imgFileName=\"jforce2.png\"> {renderJForceGamePlay()}</PicText>\n      <div>\n        <h1> Roles and responsibilities</h1>\n        <p>\n          Producer: In charge of managing the team of developers and technical\n          artists so we could hit the established deadline. Coordinating the\n          team and take decisions on what to keep/cut.\n        </p>\n        <p>\n          Game Design: Develop the whole concept of the game, the minigames and\n          their mechanics, the genre and the narrative. Balanced all minigames\n          mechanics.\n        </p>\n        <p>\n          Game Art: Helped the technical artists to come up with the theme and\n          mood of the game.\n        </p>\n      </div>\n      <PicText imgFileName=\"jforce1.png\" picFirst>\n        {renderJForceGameDesign()}\n      </PicText>\n    </div>\n  </div>\n);\n\nexport default JForce;\n","import React from \"react\";\nimport styles from \"./NinjaUp.module.css\";\nimport PicText from \"../PicText/PicText\";\n\nconst renderNinjaUpGamePlay = () => (\n  <>\n    <h2>Gameplay</h2>\n    <ul>\n      <li>\n        Dodge or try to hit a flurry of cool enemies from ninjas to fun UFOs.\n      </li>\n      <li>\n        Draw lines for your ninja to bounce off of, trying to go up and reach\n        the best height possible in an endless sea of challenges.\n      </li>\n      <li>\n        The shorter the rope, the higher and faster you will jump. Will you take\n        the risk?\n      </li>\n      <li>\n        Discover cool ninja power-ups  that will help you reach incredible\n        heights.\n      </li>\n      <li>Unlock all the fun jump master characters and new pixel costumes.</li>\n      <li>Challenge your friends or compete in global leaderboards.</li>\n    </ul>\n  </>\n);\n\nconst renderNinjaUpGameDesign = () => (\n  <>\n    <h2>Game Design thought process and notes</h2>\n    <p>\n      This was a special case because the game was already done by another team\n      but the studio wanted to relaunch it with more features. The approach we\n      took was to look into what made it special and just add more ways for that\n      special component to shine. We identified 2 special components: the\n      jumping mechanic and costumes.\n    </p>\n    <ul>\n      <li>\n        Jumping mechanic: We wanted to give the player more ways to keep jumping\n        and trying to reach new heights so we came up with the idea of power\n        ups. Extra lifes, invincibility for a short amount of time, hyper jump,\n        among others. We also added a EX jump after consecutive successful risky\n        jumps to reward users with high skill.{\" \"}\n      </li>\n      <li>\n        Costumes: The original had 10 costumes that mainly varied from color. We\n        decided to include 20+ costumes with different themes like animal,\n        job-related, music genre and even some pop-culture references. We then\n        decided to give the original 10 costumes a challenge associated to\n        unlock them. You purchased a random drop using Coins gained from various\n        sources: during your run, by hitting a special enemy and at the end of\n        your run based on your performance.\n      </li>\n    </ul>\n  </>\n);\n\nconst NinjaUp = () => (\n  <div>\n    <div className={styles.content}>\n      <h1> Ninja Up! </h1>\n      <p>Jump your way into space with the most daring and cool pixel ninja!</p>\n      <p>\n        Join the endless run action. Draw lines to create new springboards for\n        your ninja to jump from so he can bounce his way up and up!​​​​​​​\n      </p>\n      <PicText imgFileName=\"ninja2.png\"> {renderNinjaUpGamePlay()}</PicText>\n      <div>\n        <h1> Roles and responsibilities</h1>\n        <p>\n          Producer: In charge of managing the team of developers, game\n          designers, technical artists, QA so we could hit the established\n          deadlines. Also planning the schedule of development and communicating\n          it with the Production manager.\n        </p>\n        <p>\n          Game Design: Worked with the other game designer to come up with the\n          power-ups ideas, bonus rounds. I also helped with the random drop\n          rules, % of rarity and logistics of it.\n        </p>\n        <p>\n          Game Art: Worked with the technical artists to come up with themes for\n          the costumes.\n        </p>\n      </div>\n      <PicText imgFileName=\"ninja5.png\" picFirst>\n        {renderNinjaUpGameDesign()}\n      </PicText>\n    </div>\n  </div>\n);\n\nexport default NinjaUp;\n","import React from \"react\";\r\nimport { Route, HashRouter, Switch } from \"react-router-dom\";\r\nimport Home from \"../Home/Home\";\r\nimport JForce from \"../JForce/JForce\";\r\nimport NinjaUp from \"../NinjaUp/NinjaUp\";\r\nimport styles from \"./App.module.css\";\r\n\r\nconst App = () => (\r\n  <HashRouter basename=\"Eduardos-Portafolio\">\r\n    <div\r\n      className={styles.wrapper}\r\n      style={{\r\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/background.jpg\"})`,\r\n      }}\r\n    >\r\n      <div className={styles.content}>\r\n        <div className={styles.navBar}>\r\n          <li>Nav Bar</li>\r\n          <li>Nav Bar</li>\r\n        </div>\r\n        <div className={styles.data}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/Ninja Up!\" exact>\r\n              <NinjaUp />\r\n            </Route>\r\n            <Route path=\"/J Force\" exact>\r\n              <JForce />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </HashRouter>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__RRk4h\",\"content\":\"Home_content__19Njr\",\"proyectImages\":\"Home_proyectImages__wn6oA\",\"card\":\"Home_card__1f3cl\",\"background\":\"Home_background__14PtL\"};"],"sourceRoot":""}