{"version":3,"sources":["components/Pokemon/Pokemon.module.css","components/Home/Home.module.css","components/JForce/JForce.module.css","components/GridPicText/GridPicText.module.css","components/MiniGameBattleRoyal/MiniGameBattleRoyal.module.css","components/NinjaUp/NinjaUp.module.css","components/ProjectDemoRpg/ProjectDemoRPG.module.css","components/App/App.module.css","components/Home/Home.js","components/GridPicText/GridPicText.js","components/Figure/Figure.js","components/JForce/JForce.js","components/MiniGameBattleRoyal/MiniGameBattleRoyal.js","components/NinjaUp/NinjaUp.js","components/Pokemon/Pokemon.js","components/ProjectDemoRpg/ProjectDemoRPG.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","cx","classNames","bind","styles","projects","name","backgroundUrl","Home","history","useHistory","className","content","proyectImages","map","card","box","onClick","push","src","process","alt","renderGridPic","imgFileNames","gridWrapper","imgFileName","style","backgroundImage","width","height","background","GridPicText","children","textFirst","caption","defaultProps","imgFileName2","Figure","figCaption","JForce","backOfTheBox","sideBySidePics","highlightWord","renderPic","path","margin","MiniGameBattleRoyal","boxDescription","NinjaUp","grid","gamePlayWrapper","gamePlayFirstPargraph","Pokemon","paragrapWrapper","ProjectDemoRPG","App","basename","wrapper","navBar","to","data","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,KAAO,sBAAsB,gBAAkB,iCAAiC,cAAgB,iC,iBCAtMD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,sBAAsB,cAAgB,4BAA4B,KAAO,mBAAmB,IAAM,oB,gBCAxJD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,aAAe,6BAA6B,eAAiB,+BAA+B,cAAgB,gC,gBCAhKD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,UAAY,+BAA+B,WAAa,gCAAgC,QAAU,6BAA6B,YAAc,mC,gBCA9MD,EAAOC,QAAU,CAAC,QAAU,qCAAqC,eAAiB,4CAA4C,QAAU,qCAAqC,cAAgB,6C,iBCA7LD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,gBAAkB,iCAAiC,sBAAwB,yC,gBCA7JD,EAAOC,QAAU,CAAC,QAAU,gCAAgC,KAAO,6BAA6B,eAAiB,uCAAuC,cAAgB,wC,gBCAxKD,EAAOC,QAAU,CAAC,QAAU,qBAAqB,QAAU,qBAAqB,OAAS,oBAAoB,KAAO,oB,8KCG9GC,EAAKC,IAAWC,KAAKC,KAErBC,EAAW,CACf,CAAEC,KAAM,YAAaC,cAAe,eACpC,CAAED,KAAM,UAAWC,cAAe,gBAGlC,CAAED,KAAM,oBAAqBC,cAAe,iBAC5C,CACED,KAAM,kCAENC,cAAe,gBAEjB,CACED,KAAM,0BACNC,cAAe,8BA2CJC,EAvCF,WACX,IAAMC,EAAUC,cAChB,OACE,sBAAKC,UAAWP,IAAOI,KAAvB,UACE,sBAAKG,UAAWP,IAAOQ,QAAvB,UACE,wDACA,6hBAWF,qBAAKD,UAAWP,IAAOS,cAAvB,SACGR,EAASS,KAAI,gBAAGR,EAAH,EAAGA,KAAMC,EAAT,EAASA,cAAT,OACZ,sBAAgBI,UAAWV,EAAGG,IAAOW,MAArC,UACE,qBACEJ,UAAWP,IAAOY,IAClBC,QAAS,WACPR,EAAQS,KAAR,WAAiBZ,KAHrB,SAME,qBACEa,IAAG,UAAKC,uBAAL,YAA+Bb,GAClCc,IAAKf,MAGT,+BAAOA,MAZCA,Y,kCCrCdL,EAAKC,IAAWC,KAAKC,KAErBkB,EAAgB,SAACC,GAAD,OACpB,qBAAKZ,UAAWP,IAAOoB,YAAvB,SACGD,EAAaT,KAAI,SAACW,GAAD,OAChB,qBACEC,MAAO,CACLC,gBAAgB,OAAD,OAASP,uBAAT,YAAmCK,GAClDG,MAAO,IACPC,OAAQ,KAEVlB,UAAWP,IAAO0B,mBAMpBC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAWV,EAAxB,EAAwBA,aAAcW,EAAtC,EAAsCA,QAAtC,OAClB,sBAAKvB,UAAWV,EAAGG,IAAO2B,YAAa,CAAEE,cAAzC,UACGX,EAAcC,GACf,qBAAKZ,UAAWP,IAAOQ,QAAvB,SAAiCoB,IACjC,+BAAOE,QAYXH,EAAYI,aAAe,CACzBF,WAAW,EACXR,YAAa,YACbW,aAAc,KACdF,QAAS,IAGIH,Q,iBCzCTM,EAAS,SAAC,GAAD,IAAGZ,EAAH,EAAGA,YAAaa,EAAhB,EAAgBA,WAAYV,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,OAAQlB,EAA3C,EAA2CA,UAA3C,OACb,yBAAQA,UAAWA,EAAnB,UACE,qBACEQ,IAAG,UAAKC,uBAAL,YAA+BK,GAClCJ,IAAI,GACJV,UAAWP,IAAO0B,WAClBJ,MAAO,CACLE,QACAC,YAGHS,GAAc,qCAAaA,QAYhCD,EAAOF,aAAe,CACpBG,WAAY,GACZ3B,UAAW,GACXiB,MAAO,IACPC,OAAQ,KAGKQ,QC2EAE,EA7CA,kBACb,8BACE,sBAAK5B,UAAWP,IAAOQ,QAAvB,UACE,0CA7BJ,sBAAKD,UAAWP,IAAOoC,aAAvB,UACE,6DACA,iLAKA,+BACE,2GAIA,0NAKA,uLAcA,sBAAK7B,UAAWP,IAAOqC,eAAvB,UACE,cAAC,EAAD,CACEP,QAAQ,2DACRX,aAAc,CACZ,sBACA,qBACA,kBACA,uBAGJ,cAAC,EAAD,CACEE,YAAY,cACZa,WAAW,6HAGf,gCACE,6DACA,8BACE,sBAAM3B,UAAWP,IAAOsC,cAAxB,uBADF,mLAMA,8BACE,sBAAM/B,UAAWP,IAAOsC,cAAxB,0BADF,gJAKA,8BACE,sBAAM/B,UAAWP,IAAOsC,cAAxB,uBADF,sFA3FN,gCACE,uEACA,mKAIA,uTAMA,+SAMA,wPAKA,qQ,iBCeEC,EAAY,SAACC,EAAMV,GAAP,OAChB,qCACE,qBACEf,IAAKyB,EACLvB,IAAK,OACLK,MAAO,CACLE,MAAO,KACPC,OAAQ,IACRgB,OAAQ,WAGZ,sBAAMlC,UAAWP,IAAO8B,QAAxB,SAAkCA,QAoDvBY,EAnBa,kBAC1B,8BACE,sBAAKnC,UAAWP,IAAOQ,QAAvB,UACE,mEA/BJ,sBAAKD,UAAWP,IAAO2C,eAAvB,UACE,6DACA,iVA+BGJ,EAAU,GAAD,OACLvB,uBADK,8BAER,8BAEDuB,EAAU,GAAD,OACLvB,uBADK,8BAER,iCA3BN,gCACE,4DACA,8BACE,sBAAMT,UAAWP,IAAOsC,cAAxB,0BADF,wMAMA,8BACE,sBAAM/B,UAAWP,IAAOsC,cAAxB,uBADF,gHA5EF,qCACE,uEACA,wYAOA,qZAQA,uaAQA,qSAMA,+T,iBC+DWM,EA1CC,kBACd,8BACE,sBAAKrC,UAAWP,IAAOQ,QAAvB,UACE,6CACA,sBAAKD,UAAWP,IAAO6C,KAAvB,UAvDJ,sBAAKtC,UAAWP,IAAO8C,gBAAvB,UACE,6DACA,sBAAKvC,UAAWP,IAAO+C,sBAAvB,UACE,oGACA,gNAKF,+BACE,uGAGA,oHAIA,yGAwCE,cAAC,EAAD,CACE1B,YAAY,aACZa,WAAW,oIAEb,cAAC,EAAD,CACEb,YAAY,aACZa,WAAW,+EAEb,cAAC,EAAD,CACEb,YAAY,aACZa,WAAW,iEAGf,gCACE,6DACA,qQAMA,+MAKA,wHA5DN,gCACE,uEACA,iWAOA,sWAOA,mf,gBCmGWc,EA/EC,kBACd,8BACE,sBAAKzC,UAAWP,IAAOQ,QAAvB,UACE,0DACA,kPA/DJ,sBAAKD,UAAWP,IAAO2C,eAAvB,UACE,6DACA,kPAoEE,sBAAKpC,UAAWP,IAAO6C,KAAvB,UACE,cAAC,EAAD,CACExB,YAAY,sBACZa,WAAW,2EAEb,sBAAK3B,UAAWP,IAAOiD,gBAAvB,UACE,8BACE,sBAAM1C,UAAWP,IAAOsC,cAAxB,sCAEQ,IAHV,gIAOA,2UAQF,sBAAK/B,UAAWP,IAAOiD,gBAAvB,UACE,8BACE,sBAAM1C,UAAWP,IAAOsC,cAAxB,qCAAmE,IADrE,6QAOA,6ZASF,cAAC,EAAD,CACEjB,YAAY,4BACZa,WAAW,2EAGf,gDACA,sBAAK3B,UAAWP,IAAO6C,KAAvB,UACE,cAAC,EAAD,CACExB,YAAY,2BACZa,WAAW,4GAEb,cAAC,EAAD,CACEb,YAAY,2BACZa,WAAW,+JAEb,cAAC,EAAD,CACEb,YAAY,yBACZa,WAAW,oEAEb,cAAC,EAAD,CACEb,YAAY,yBACZa,WAAW,kIAtHnB,gCACE,4DACA,8BACE,sBAAM3B,UAAWP,IAAOsC,cAAxB,0BADF,iUAYF,gCACE,uEACA,wgBASA,uRAMA,wQAKA,giB,iBCqCWY,EA/BQ,kBACrB,8BACE,sBAAK3C,UAAWP,IAAOQ,QAAvB,UACE,oDACA,sBAAKD,UAAWP,IAAO6C,KAAvB,UAnCJ,sBAAKtC,UAAWP,IAAO2C,eAAvB,UACE,6DACA,6QAMA,iKA6BI,cAAC,EAAD,CACEtB,YAAY,eACZa,WAAW,uIAEb,cAAC,EAAD,CACEb,YAAY,YACZa,WAAW,0NAEb,cAAC,EAAD,CAAQb,YAAY,YAAYa,WA7BtC,qCACE,oIAIA,0GAGA,wLAuBE,gCACE,6DACA,8BACE,sBAAM3B,UAAWP,IAAOsC,cAAxB,0BADF,oRAvEN,qCACE,uEACA,qaAQA,ga,iBCoCWa,EAzCH,kBACV,cAAC,IAAD,CAAYC,SAAS,sBAArB,SACE,qBACE7C,UAAWP,IAAOqD,QAClB/B,MAAO,CACLC,gBAAgB,OAAD,OAASP,kCAAT,MAHnB,SAME,sBAAKT,UAAWP,IAAOQ,QAAvB,UACE,qBAAKD,UAAWP,IAAOsD,OAAvB,SACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,sBAGJ,qBAAKhD,UAAWP,IAAOwD,KAAvB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOhB,KAAK,IAAIiB,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOjB,KAAK,aAAaiB,OAAK,EAA9B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOjB,KAAK,WAAWiB,OAAK,EAA5B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOjB,KAAK,qBAAqBiB,OAAK,EAAtC,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOjB,KAAK,mCAAmCiB,OAAK,EAApD,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOjB,KAAK,2BAAwBiB,OAAK,EAAzC,SACE,cAAC,EAAD,mBC9BCC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.23b0fdca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Pokemon_content__1Lgnm\",\"boxDescription\":\"Pokemon_boxDescription__2zASE\",\"grid\":\"Pokemon_grid__35csS\",\"paragrapWrapper\":\"Pokemon_paragrapWrapper__2HgYT\",\"highlightWord\":\"Pokemon_highlightWord__24wja\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__2A12x\",\"content\":\"Home_content__c1JSB\",\"proyectImages\":\"Home_proyectImages__2578l\",\"card\":\"Home_card__CPUIx\",\"box\":\"Home_box__3WE2W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"JForce_content__2GyHp\",\"backOfTheBox\":\"JForce_backOfTheBox__3ggnI\",\"sideBySidePics\":\"JForce_sideBySidePics__2EBxh\",\"highlightWord\":\"JForce_highlightWord__2mSs8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GridPicText\":\"GridPicText_GridPicText__1LWvy\",\"textFirst\":\"GridPicText_textFirst__ekuUF\",\"background\":\"GridPicText_background__Px0hb\",\"content\":\"GridPicText_content__1KgiJ\",\"gridWrapper\":\"GridPicText_gridWrapper__4U8d5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MiniGameBattleRoyal_content__39D9P\",\"boxDescription\":\"MiniGameBattleRoyal_boxDescription__2CJ44\",\"caption\":\"MiniGameBattleRoyal_caption__2NO9o\",\"highlightWord\":\"MiniGameBattleRoyal_highlightWord__xWerk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"NinjaUp_content__2xU-w\",\"grid\":\"NinjaUp_grid__QP1kw\",\"gamePlayWrapper\":\"NinjaUp_gamePlayWrapper__tjViP\",\"gamePlayFirstPargraph\":\"NinjaUp_gamePlayFirstPargraph__1AA2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProjectDemoRPG_content__8QELK\",\"grid\":\"ProjectDemoRPG_grid__1e0lu\",\"boxDescription\":\"ProjectDemoRPG_boxDescription__coZJ1\",\"highlightWord\":\"ProjectDemoRPG_highlightWord__37F3D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__kc2PB\",\"content\":\"App_content__1BoB2\",\"navBar\":\"App_navBar__1jjxk\",\"data\":\"App_data__1CmoQ\"};","import React from \"react\";\r\nimport classNames from \"classnames/bind\";\r\nimport styles from \"./Home.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst cx = classNames.bind(styles);\r\n\r\nconst projects = [\r\n  { name: \"Ninja Up!\", backgroundUrl: \"/ninja4.png\" },\r\n  { name: \"J Force\", backgroundUrl: \"/jforce3.png\" },\r\n  // { name: \"Project: Demo RPG\", backgroundUrl: \"/chrono_trigger.jpg\" },\r\n  // { name: \"Project: Demo RPG\", backgroundUrl: \"/chrono_trigger2.jpg\" },\r\n  { name: \"Project: Demo RPG\", backgroundUrl: \"/testing3.png\" },\r\n  { \r\n    name: \"Project: Minigame Battle Royale\", \r\n    // backgroundUrl: \"/minigamebattleroyale4.png\", \r\n    backgroundUrl: \"/testing.PNG\",\r\n  },\r\n  {\r\n    name: \"Project: PokÃ©mon MMO\",\r\n    backgroundUrl: \"/pokemon_adventures_2.png\",\r\n  },\r\n];\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className={styles.Home}>\r\n      <div className={styles.content}>\r\n        <h1> Eduardo PeÃ±a Junco</h1>\r\n        <p>\r\n          Hola! My name is Eduardo PeÃ±a and I'm an Industrial Engineer by career\r\n          but a Gamer by heart. I've worked as a Producer in a videogame studio\r\n          and as a Project Manager/Product Engineer in the software industry.\r\n          What is it that I like about videogames that I would want to dedicate\r\n          my life to them? That is a good question and if I had to answer it, I\r\n          would say the emotions videogames can make you, the player, feel. As a\r\n          Game Designer, I want to create experiences that can make a player\r\n          feel something.\r\n        </p>\r\n      </div>\r\n      <div className={styles.proyectImages}>\r\n        {projects.map(({ name, backgroundUrl }) => (\r\n          <div key={name} className={cx(styles.card)}>\r\n            <div\r\n              className={styles.box}\r\n              onClick={() => {\r\n                history.push(`/${name}`);\r\n              }}\r\n            >\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/${backgroundUrl}`}\r\n                alt={name}\r\n              />\r\n            </div>\r\n            <span>{name}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./GridPicText.module.css\";\r\nimport classNames from \"classnames/bind\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst renderGridPic = (imgFileNames) => (\r\n  <div className={styles.gridWrapper}>\r\n    {imgFileNames.map((imgFileName) => (\r\n      <div\r\n        style={{\r\n          backgroundImage: `url(${process.env.PUBLIC_URL}/${imgFileName}`,\r\n          width: 200,\r\n          height: 200,\r\n        }}\r\n        className={styles.background}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nconst GridPicText = ({ children, textFirst, imgFileNames, caption }) => (\r\n  <div className={cx(styles.GridPicText, { textFirst })}>\r\n    {renderGridPic(imgFileNames)}\r\n    <div className={styles.content}>{children}</div>\r\n    <span>{caption}</span>\r\n  </div>\r\n);\r\n\r\nGridPicText.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  textFirst: PropTypes.bool,\r\n  imgFileName: PropTypes.string,\r\n  imgFileName2: PropTypes.string,\r\n  caption: PropTypes.string,\r\n};\r\n\r\nGridPicText.defaultProps = {\r\n  textFirst: false,\r\n  imgFileName: \"melee.jpg\",\r\n  imgFileName2: null,\r\n  caption: \"\",\r\n};\r\n\r\nexport default GridPicText;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Figure.module.css\";\n\nconst Figure = ({ imgFileName, figCaption, width, height, className }) => (\n  <figure className={className}>\n    <img\n      src={`${process.env.PUBLIC_URL}/${imgFileName}`}\n      alt=\"\"\n      className={styles.background}\n      style={{\n        width,\n        height,\n      }}\n    />\n    {figCaption && <figcaption>{figCaption}</figcaption>}\n  </figure>\n);\n\nFigure.propTypes = {\n  imgFileName: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  figCaption: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nFigure.defaultProps = {\n  figCaption: \"\",\n  className: \"\",\n  width: 400,\n  height: 400,\n};\n\nexport default Figure;\n","import React from \"react\";\r\nimport styles from \"./JForce.module.css\";\r\nimport GridPicText from \"../GridPicText/GridPicText\";\r\nimport Figure from \"../Figure/Figure\";\r\n\r\nconst renderJForceGameDesign = () => (\r\n  <div>\r\n    <h2>Game Design thought process and notes</h2>\r\n    <p>\r\n      This project was developed at the Global Game Jam 2020, where I\r\n      participated as a Game Designer and Producer. The theme was \"Fix\".\r\n    </p>\r\n    <p>\r\n      From the first time I thought of the game, I always thought of it as a\r\n      multiplayer experience, because many times, fixing anything is easier if\r\n      you have someone that supports you. Thanks to the amazing work of our Lead\r\n      Eng, we were able to implement a 4 player co-op experience.\r\n    </p>\r\n    <p>\r\n      I strived to create a fun cooperative experience that demanded some skill\r\n      of the players but I also added certain randomness to it so no game was\r\n      the same. In order to have this, I designed various simple minigames that\r\n      started easy but could become increasingly harder.\r\n    </p>\r\n    <p>\r\n      Machines are the main gameplay loop. They crash using a system we\r\n      nicknamed the âChaos Managerâ. This pulls a random number and depending on\r\n      the probability of each machine, they may or may not break down.\r\n    </p>\r\n    <p>\r\n      The machines can break down all at the same time so constant communication\r\n      is key, which makes for a fun couple of sessions. Hiding the HP bar sets\r\n      the tension right from the start and adds to the frantic communication.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst backOFTheBox = () => (\r\n  <div className={styles.backOfTheBox}>\r\n    <h2>Back of the box description</h2>\r\n    <p>\r\n      Co-operative multiplayer where you have to fix/repair the different\r\n      machines in order to survive. Coordination and communication are\r\n      everything!\r\n    </p>\r\n    <ul>\r\n      <li>\r\n        Machines will start breaking down and you and your team need to fix\r\n        them.\r\n      </li>\r\n      <li>\r\n        If a machine is broken down, get ready to enter a minigame to fix it.\r\n        From pressing the A button repeatedly to hitting it a single time for a\r\n        precise action, each machine is different.\r\n      </li>\r\n      <li>\r\n        If a machine continues to be broken down, it will drain the HP of the\r\n        team and if the HP reaches 0, is Game Over. Survive for 5 minutes to\r\n        win!\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nconst JForce = () => (\r\n  <div>\r\n    <div className={styles.content}>\r\n      <h1> J Force</h1>\r\n      {backOFTheBox()}\r\n      <div className={styles.sideBySidePics}>\r\n        <GridPicText\r\n          caption=\"Utilize various mechanics to fix the different machines.\"\r\n          imgFileNames={[\r\n            \"Copy_of_press_a.png\",\r\n            \"jforce_buttons.png\",\r\n            \"jforce_dpad.png\",\r\n            \"jforce_rotate.png\",\r\n          ]}\r\n        ></GridPicText>\r\n        <Figure\r\n          imgFileName=\"jforce1.png\"\r\n          figCaption=\"Various machines can and will break down simultaneously. Coordinate with your team on how to tix and escape together.\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <h2> Roles and responsibilities</h2>\r\n        <p>\r\n          <span className={styles.highlightWord}>Producer.</span> In charge of\r\n          managing the team of developers and technical artists so we could hit\r\n          the established deadline. Coordinating the team and taking decisions\r\n          on what to keep/cut.\r\n        </p>\r\n        <p>\r\n          <span className={styles.highlightWord}>Game Design.</span> Develop the\r\n          whole concept of the game, the minigames and their mechanics, the\r\n          genre, and the narrative. Balanced all minigames mechanics.\r\n        </p>\r\n        <p>\r\n          <span className={styles.highlightWord}>Game Art.</span> Helped the\r\n          technical artists to come up with the theme and mood of the game.\r\n        </p>\r\n      </div>\r\n      {renderJForceGameDesign()}\r\n      {/* <PicText imgFileName=\"jforce1.png\" textFirst>\r\n      </PicText> */}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default JForce;\r\n","import React from \"react\";\nimport styles from \"./MiniGameBattleRoyal.module.css\";\n\nconst renderMiniGameBattleRoyalGameDesign = () => (\n  <>\n    <h2>Game Design thought process and notes</h2>\n    <p>\n      This is a project proposal that I sent to Fall Guys developers Tonic games\n      (back then Mediatonic). I already had the idea of a minigame battle royale\n      and I thought I could adapt some of my ideas to their style. I took into\n      consideration the way the game feels and the way players acted in the game\n      to create fun minigames where these expressions are welcomed.\n    </p>\n    <p>\n      Thanks to the amazing talent of @Manlio, I described how I wanted to\n      present my ideas: a new player should understand everything from a single\n      screenshot without too much text. After a couple of revisions, he created\n      something truly amazing. Be sure to check him out! I've added a\n      complimentary 2nd screen with more detailed information for the purposes\n      of this portfolio.\n    </p>\n    <p>\n      Besides the 3 minigames I designed (2 of those didn't receive the visual\n      treatment), I proposed the Variation System. This allowed the design team\n      to design a single minigame and modify some of the elements so the\n      experience was different. While there is an implementation of sorts of\n      this in the current game (minigames can have different obstacles) it feels\n      more random than well-thought.\n    </p>\n    <p>\n      What I was suggesting was clear feedback to the player that a game had\n      undergone a variation going from normal to hard to hardest. This can\n      create great moments of excitement after beating one of these levels, with\n      the rewards should also match the difficulty.\n    </p>\n    <p>\n      Not only does this affects the perception of players on the number of\n      minigames there are but it is easier on the production side too. Designing\n      one minigame and some variations of it is faster on game design, UX/UI,\n      development, QA, etc than designing 2-3 different minigames.\n    </p>\n  </>\n);\n\nconst renderPic = (path, caption) => (\n  <>\n    <img\n      src={path}\n      alt={\"name\"}\n      style={{\n        width: 1200,\n        height: 800,\n        margin: \" 15px\",\n      }}\n    />\n    <span className={styles.caption}>{caption}</span>\n  </>\n);\n\nconst renderBoxDescription = () => (\n  <div className={styles.boxDescription}>\n    <h2>Back of the box description</h2>\n    <p>\n      An arena/TV show-themed tournament on a dystopian future where\n      participants are comically injured, which is amusing and televised. It\n      consists of various quick challenges spaced in rounds where the lower\n      scores are eliminated until only 1 player is standing. âââââââ\n    </p>\n  </div>\n);\n\nconst renderRoles = () => (\n  <div>\n    <h2>Roles and responsibilities</h2>\n    <p>\n      <span className={styles.highlightWord}>Game Design.</span>Develop the\n      ideas of the minigames, which include: technical info such as players,\n      size of arena, objectives, etc. Adapted the whole concept to a\n      pre-existing game that offered similar gameplay.\n    </p>\n    <p>\n      <span className={styles.highlightWord}>Game art.</span>Deliver the\n      direction I wanted for the visual examples. worked closely with the artist\n      in charge of it.\n    </p>\n  </div>\n);\n\nconst MiniGameBattleRoyal = () => (\n  <div>\n    <div className={styles.content}>\n      <h1> Project: Minigame Battle Royale </h1>\n      {renderBoxDescription()}\n      {renderPic(\n        `${process.env.PUBLIC_URL}/minigamebattleroyale1.png`,\n        \"Visualization of gameplay.\"\n      )}\n      {renderPic(\n        `${process.env.PUBLIC_URL}/minigamebattleroyale3.png`,\n        \"Detailed info of the minigame\"\n      )}\n      {renderRoles()}\n      {renderMiniGameBattleRoyalGameDesign()}\n    </div>\n  </div>\n);\n\nexport default MiniGameBattleRoyal;\n","import React from \"react\";\nimport styles from \"./NinjaUp.module.css\";\nimport Figure from \"../Figure/Figure\";\n\nconst renderNinjaUpGamePlay = () => (\n  <div className={styles.gamePlayWrapper}>\n    <h2>Back of the box description</h2>\n    <div className={styles.gamePlayFirstPargraph}>\n      <p>Jump your way into space with the most daring and cool pixel ninja!</p>\n      <p>\n        Join the endless run action. Draw lines to create new springboards for\n        your ninja to jump from so he can bounce his way up and up!âââââââ\n      </p>\n    </div>\n    <ul>\n      <li>\n        Dodge or try to hit a flurry of cool enemies from ninjas to fun UFOs.\n      </li>\n      <li>\n        The shorter the rope, the higher and faster you will jump. Will you take\n        the risk?\n      </li>\n      <li>Unlock all the fun jump master characters and new pixel costumes.</li>\n    </ul>\n  </div>\n);\n\nconst renderNinjaUpGameDesign = () => (\n  <div>\n    <h2>Game Design thought process and notes</h2>\n    <p>\n      This was a special case because the game was already done by another team\n      but the studio wanted to relaunch it with more features. The approach we\n      took was to look into what made it special and just add more ways for that\n      special component to shine. We identified 2 special components: the\n      jumping mechanic and costumes.\n    </p>\n    <p>\n      Jumping mechanic: We wanted to give the player more ways to keep jumping\n      and trying to reach new heights so we came up with the idea of power ups.\n      Extra lifes, invincibility for a short amount of time, hyper jump, among\n      others. We also added a EX jump after consecutive successful risky jumps\n      to reward users with high skill.\n    </p>\n    <p>\n      Costumes: The original had 10 costumes that mainly varied from color. We\n      decided to include 20+ costumes with different themes like animal,\n      job-related, music genre and even some pop-culture references. We then\n      decided to give the original 10 costumes a challenge associated to unlock\n      them. You purchased a random drop using Coins gained from various sources:\n      during your run, by hitting a special enemy and at the end of your run\n      based on your performance.\n    </p>\n  </div>\n);\n\nconst NinjaUp = () => (\n  <div>\n    <div className={styles.content}>\n      <h1> Ninja Up! </h1>\n      <div className={styles.grid}>\n        {renderNinjaUpGamePlay()}\n        <Figure\n          imgFileName=\"ninja4.png\"\n          figCaption=\"Draw lines for your ninja to bounce off of, trying to go up and reach the best height possible in an endless sea of challenges.\"\n        />\n        <Figure\n          imgFileName=\"ninja5.png\"\n          figCaption=\"Discover cool ninja power-ups that will help you reach incredible heights.\"\n        />\n        <Figure\n          imgFileName=\"ninja2.png\"\n          figCaption=\"Challenge your friends or compete in global leaderboards.\"\n        />\n      </div>\n      <div>\n        <h2> Roles and responsibilities</h2>\n        <p>\n          Producer: In charge of managing the team of developers, game\n          designers, technical artists, QA so we could hit the established\n          deadlines. Also planning the schedule of development and communicating\n          it with the Production manager.\n        </p>\n        <p>\n          Game Design: Worked with the other game designer to come up with the\n          power-ups ideas, bonus rounds. I also helped with the random drop\n          rules, % of rarity and logistics of it.\n        </p>\n        <p>\n          Game Art: Worked with the technical artists to come up with themes for\n          the costumes.\n        </p>\n      </div>\n      {renderNinjaUpGameDesign()}\n    </div>\n  </div>\n);\n\nexport default NinjaUp;\n","import React from \"react\";\nimport styles from \"./Pokemon.module.css\";\nimport Figure from \"../Figure/Figure\";\n\nconst renderBoxDescription = () => (\n  <div className={styles.boxDescription}>\n    <h2>Back of the box description</h2>\n    <p>\n      Your adventure awaits: Climb mountains, traverse oceans, explore dark\n      caves. Travel in a vast and expansive world where you will need to work\n      with your PokÃ©mon to overcome the many ordeals you will face.\n    </p>\n  </div>\n);\n\nconst renderRoles = () => (\n  <div>\n    <h2>Roles and responsibilities</h2>\n    <p>\n      <span className={styles.highlightWord}>Game Design.</span> Define the\n      basic concept of the game and extra features that will make the world feel\n      complete. This includes the 2 different types of combat, Photo mode, the\n      implementation of the TCG, and other technical data such as the possible\n      classes a Player could choose and how that could impact the overall\n      experience.\n    </p>\n  </div>\n);\n\nconst renderGameDesign = () => (\n  <div>\n    <h2>Game Design thought process and notes</h2>\n    <p>\n      The purpose of the game is to explore and bond with your PokÃ©mon. Inspired\n      by the early stories of the series creator, Satoshi Tajiri, who had so\n      much joy and fun going out to nearby forests to explore and see who could\n      find the most insects, this game should bring the same experience and\n      feelings to the players. I took inspiration from various PokÃ©mon sources,\n      such as the main games, the TCG, PokÃ©mon Snap, PokkÃ©n Tournament DX,\n      PokÃ©mon Adventures manga, among others.\n    </p>\n    <p>\n      I think everyone that has played PokÃ©mon has at least thought how cool\n      this world would be in an Online setting; seeing players run all around.\n      With that in mind, I created this project to try to capture everything a\n      PokÃ©mon MMO would need.\n    </p>\n    <p>\n      The most complicated part was the combat, and I couldnât even decide how\n      to do it, which is why I propose 2 different styles. Iâve played my share\n      of MMOs and action/fighting games so either system I think would be great.\n    </p>\n    <p>\n      What got me excited was all the additions the game could have to truly\n      make it a living world. The TCG and Photo Mode can be games on their own,\n      as they currently are. In typical MMO fashion, each expansion could add an\n      entire region with new PokÃ©mon and areas to discover. All the groundwork\n      has already been laid out thanks to the mainline game series. On this note\n      alone, you have around 8-9 expansions already with original regions and\n      never before seen PokÃ©mon as part of this original game.\n    </p>\n  </div>\n);\n\nconst Pokemon = () => (\n  <div>\n    <div className={styles.content}>\n      <h1> Project: PokÃ©mon MMO</h1>\n      <p>\n        DISCLAIMER: This is a project a little different than the other ones\n        presented in my portfolio. Due to the size of the project and idea, I\n        will only outline some of the main attractions and my design thoughts.\n      </p>\n      {renderBoxDescription()}\n\n      <div className={styles.grid}>\n        <Figure\n          imgFileName=\"Pokemon_battle1.jpg\"\n          figCaption=\"Traditional combat style, with roots both in PokÃ©mon and most MMOs.\"\n        />\n        <div className={styles.paragrapWrapper}>\n          <p>\n            <span className={styles.highlightWord}>\n              Tab system combat style.\n            </span>{\" \"}\n            This style is based on the Tab system present in most MMOs. A global\n            cooldown will rule over the general use of abilities.\n          </p>\n          <p>\n            The moves will be part of a combo or rotation where you start with a\n            low-level attack then chain increasingly damage moves. As your\n            PokÃ©mon raises in level, they will learn new moves that allow them\n            to continue the combo. This paired with Trainer abilities will make\n            the combat more engaging.\n          </p>\n        </div>\n        <div className={styles.paragrapWrapper}>\n          <p>\n            <span className={styles.highlightWord}>PokkÃ©n style combat.</span>{\" \"}\n            One of the coolest and engaging systems to date in a PokÃ©mon spinoff\n            is the PokkÃ©n Tournament game. It is a fighting game with a lot of\n            moves and combos designed specifically for each PokÃ©mon. Each\n            PokÃ©mon felt unique and were divided into categories.\n          </p>\n          <p>\n            For this reason, applying this same level of detail to each PokÃ©mon\n            would be too much for an MMO. While more games in the genre are\n            being developed as action-based games, they do not have the 900+\n            PokÃ©mon that would need to be animated. A possible solution for this\n            would be that the animations are part of the move and not the\n            PokÃ©mon, the same as the mainline games.\n          </p>\n        </div>\n        <Figure\n          imgFileName=\"pokken_battle_system1.jpg\"\n          figCaption=\"Action-oriented gameplay focused on the uniqueness of each Pokemon.\"\n        />\n      </div>\n      <h2>Extra features</h2>\n      <div className={styles.grid}>\n        <Figure\n          imgFileName=\"pokemon_secret_bases.jpg\"\n          figCaption=\"Housing - Decorate your place and invite other people in. You can trade, chat, battle, play cards, etc.\"\n        />\n        <Figure\n          imgFileName=\"pokemon_adventures_3.jpg\"\n          figCaption=\"Classes - The main leveling system for your Trainer. The Trainer will learn many support actions to help your PokÃ©mon in battle and also outside of it.\"\n        />\n        <Figure\n          imgFileName=\"new_pokemon_snap_1.jpg\"\n          figCaption=\" Photo Mode - In-depth photo capabilities akin to Pokemon Snap.\"\n        />\n        <Figure\n          imgFileName=\"pokemon_tcg_online.png\"\n          figCaption=\"Trading Card Game - Seasons, tournaments, and unranked battles. Cards you buy in the real world can be redeemed here also.\"\n        />\n      </div>\n      {renderRoles()}\n      {renderGameDesign()}\n    </div>\n  </div>\n);\n\nexport default Pokemon;\n","import React from \"react\";\nimport styles from \"./ProjectDemoRPG.module.css\";\nimport Figure from \"../Figure/Figure\";\n\nconst renderProjectDemoRPGGameDesign = () => (\n  <>\n    <h2>Game Design thought process and notes</h2>\n    <p>\n      One of the most satisfying feelings is to receive immediate feedback for\n      doing anything. I want to give that feeling to the players where they can\n      feel good in each fight because they managed to land critical hits and\n      evade all attacks. This can only be done not by a random stat but by the\n      skill of the player. I want to put players in a Flow state when faced with\n      a difficult challenge.\n    </p>\n    <p>\n      Coming from a long history with RPGs and Fighting games, I researched a\n      lot of the systems that have been used in those genres and came up with\n      this idea. I took the elements of an RPG and stripped it down to its most\n      basic form to test if the core gameplay was good. Then I used the combo\n      system found on some RPGs and mixed it with the feeling of combos in\n      Fighting games.\n    </p>\n  </>\n);\n\nconst renderBoxDescription = () => (\n  <div className={styles.boxDescription}>\n    <h2>Back of the box description</h2>\n    <p>\n      In this world, civilisation has the ability to wield different types of\n      Magic, namely control the very energy that surrounds them. Our conflict\n      will take us to one of the continents of this world and see the events\n      thatÂ unfold there.\n    </p>\n    <p>\n      Youâll play as the best friend of the heroine who will try to become the\n      Queen and lead her small kingdom to prosperity.\n    </p>\n  </div>\n);\n\nconst renderGifCaption = () => (\n  <>\n    <p>\n      Beginner vs advanced - Choose between these 2 modes and use the one you\n      feel more comfortable with.\n    </p>\n    <p>\n      Beginner will slow down before each input and show which button to press.\n    </p>\n    <p>\n      Advanced will use fewer resources and hit harder but the animation will\n      move at normal speed and not show any button indications on the screen.\n    </p>\n  </>\n);\n\nconst ProjectDemoRPG = () => (\n  <div>\n    <div className={styles.content}>\n      <h1> Project: Demo RPG</h1>\n      <div className={styles.grid}>\n        {renderBoxDescription()}\n        <Figure\n          imgFileName=\"X-strike.png\"\n          figCaption=\"During combat, unleash devastating Combos with 1, 2 or up to 3 characters. These Combos can then be modified with a Timed command.\"\n        />\n        <Figure\n          imgFileName=\"demo1.jpg\"\n          figCaption=\"Timed commands: If you time your button presses just right when attacking an enemy, youâll do extra damage or even unlock further steps of the Combo. Can also be used to defend yourself from incoming attacks.\"\n        />\n        <Figure imgFileName=\"demo3.gif\" figCaption={renderGifCaption()} />\n      </div>\n      <div>\n        <h1> Roles and responsibilities</h1>\n        <p>\n          <span className={styles.highlightWord}>Game Design.</span> Develop the\n          whole concept of the game, which includes: the main gameplay loop,\n          mechanics of each move, combo mechanics, technical info such as\n          timeframe of the button presses in order for the attacks to be\n          successful, damage calculations, among other design choices.\n        </p>\n      </div>\n      {renderProjectDemoRPGGameDesign()}\n    </div>\n  </div>\n);\n\nexport default ProjectDemoRPG;\n","import React from 'react';\r\nimport { Route, HashRouter, Switch, Link } from 'react-router-dom';\r\nimport Home from '../Home/Home';\r\nimport JForce from '../JForce/JForce';\r\nimport MiniGameBattleRoyal from '../MiniGameBattleRoyal/MiniGameBattleRoyal';\r\nimport NinjaUp from '../NinjaUp/NinjaUp';\r\nimport Pokemon from '../Pokemon/Pokemon';\r\nimport ProjectDemoRPG from '../ProjectDemoRpg/ProjectDemoRPG';\r\nimport styles from './App.module.css';\r\n\r\nconst App = () => (\r\n  <HashRouter basename=\"Eduardos-Portafolio\">\r\n    <div\r\n      className={styles.wrapper}\r\n      style={{\r\n        backgroundImage: `url(${process.env.PUBLIC_URL + '/fondo3.jpg'})`,\r\n      }}\r\n    >\r\n      <div className={styles.content}>\r\n        <div className={styles.navBar}>\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n        </div>\r\n        <div className={styles.data}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/Ninja Up!\" exact>\r\n              <NinjaUp />\r\n            </Route>\r\n            <Route path=\"/J Force\" exact>\r\n              <JForce />\r\n            </Route>\r\n            <Route path=\"/Project: Demo RPG\" exact>\r\n              <ProjectDemoRPG />\r\n            </Route>\r\n            <Route path=\"/Project: Minigame Battle Royale\" exact>\r\n              <MiniGameBattleRoyal />\r\n            </Route>\r\n            <Route path=\"/Project: PokÃ©mon MMO\" exact>\r\n              <Pokemon />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </HashRouter>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}